name: ci-build-and-push

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
      - 'docker-compose*.yml'
      - 'deploy/quickstart.sh'
      - '.gitignore'
      - '.env.example'
      - 'Makefile'
      - '.dockerignore'
      - 'LICENSE'

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository_owner }}/erabooru

    outputs:
      short-sha: ${{ steps.sha.outputs.short-sha }}

    steps:
    - name: Set SHORT_SHA output
      id: sha
      run: echo "short-sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: 'stable' 
        cache: true

    - name: Go vet & test
      run: |
        go vet ./...
        go test ./...

    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: web/package-lock.json

    - name: Front-end check
      run: |
        cd web
        npm ci
        npm run check
        npm run build

    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build + push API
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        target: prod
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-api:${{ steps.sha.outputs.short-sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-api:${{ github.ref == 'refs/heads/main' && 'latest' || 'edge' }}
        cache-from: |
          type=gha,scope=api
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-api:latest
        cache-to: type=gha,mode=max,scope=api

    - name: Build + push media-worker
      uses: docker/build-push-action@v6
      with:
        context: .
        file: cmd/media_worker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-media-worker:${{ steps.sha.outputs.short-sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-media-worker:${{ github.ref == 'refs/heads/main' && 'latest' || 'edge' }}
        cache-from: |
          type=gha,scope=media-worker
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-media-worker:latest
        cache-to: type=gha,mode=max,scope=media-worker

    - name: Build + push embed-worker
      uses: docker/build-push-action@v6
      with:
        context: .
        file: cmd/image_embed_worker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-embed-worker:${{ steps.sha.outputs.short-sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-embed-worker:${{ github.ref == 'refs/heads/main' && 'latest' || 'edge' }}
        cache-from: |
          type=gha,scope=embed-worker
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-embed-worker:latest
        cache-to: type=gha,mode=max,scope=embed-worker